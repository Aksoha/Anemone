<UserControl x:Class="Anemone.UI.Calculation.Views.HeatingRepositoryListView" x:Name="HeatingRepositoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:viewModels="clr-namespace:Anemone.UI.Calculation.ViewModels"
             xmlns:icons="clr-namespace:Anemone.UI.Core.Icons;assembly=Anemone.UI.Core"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewModels:HeatingRepositoryListViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}" />
        
        <Style TargetType="ToggleButton" x:Key="ItemsOrderToggle">
            <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="0 0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="BorderBrush"
                    Value="{StaticResource MaterialDesignTextBoxBorder}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </UserControl.Resources>
    <!-- controls -->
    <materialDesign:Card>
        <Grid>
            <Grid
            Visibility="{Binding IsRepositoryListVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!-- search box -->
            <TextBox Grid.Row="0"
                     materialDesign:HintAssist.Hint="search"
                     materialDesign:TextFieldAssist.HasClearButton="True"
                     Margin="0 5"
                     Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged }" />


            <ToggleButton x:Name="ToggleButton" Grid.Row="1"
                          Style="{StaticResource ItemsOrderToggle}"
                          IsChecked="{Binding IsAscendingOrder}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Margin="0 0 5 0">Name</TextBlock>
                    <icons:PackIcon Margin="5 0 0 0" Height="22" Width="22">
                    <icons:PackIcon.Style>
                        <Style TargetType="{x:Type icons:PackIcon}" BasedOn="{StaticResource {x:Type icons:PackIcon}}">
                            <Setter Property="Kind" Value="OrderAlphabeticalDescending"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ToggleButton, Path=IsChecked}" Value="True">
                                    <Setter Property="Kind" Value="OrderAlphabeticalAscending"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </icons:PackIcon.Style>
                    </icons:PackIcon>
                </StackPanel>
            </ToggleButton>

            <!-- items -->
            <ListView Grid.Row="2"
                      ItemsSource="{Binding FilteredItems}"
                      SelectedItem="{Binding SelectedItem}"
                      SelectionMode="Single">
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Rename" Icon="{icons:PackIcon Rename}"
                                  Command="{Binding Path=DataContext.RenameCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" />
                        <MenuItem Header="Delete" Icon="{icons:PackIcon Delete}"
                                  Command="{Binding Path=DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" />
                    </ContextMenu>


                    <Style TargetType="GridViewColumnHeader">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style>
                </ListView.Resources>

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}"
                           BasedOn="{StaticResource MaterialDesignGridViewItem}">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn DisplayMemberBinding="{Binding Name}" />
                    </GridView>
                </ListView.View>
            </ListView>
            </Grid>
            <Grid Visibility="{Binding IsRepositoryListVisible, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                <StackPanel Margin="5 10">
                    <TextBlock HorizontalAlignment="Center" Text="oops, look's like there is no data available"
                               TextWrapping="Wrap" Margin="5 10" />
                    <Button Command="{Binding NavigateToDataImportCommand}">Import data</Button>
                </StackPanel>
            </Grid>
        </Grid>
    </materialDesign:Card>
</UserControl>