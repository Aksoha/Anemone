<UserControl x:Class="Anemone.DataImport.Views.MapColumnsView"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:Anemone.DataImport.ViewModels"
             xmlns:models="clr-namespace:Anemone.DataImport.Models"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:components="clr-namespace:Anemone.Core.Components;assembly=Anemone.Core"
             d:DataContext="{d:DesignInstance Type=vm:MapColumnsViewModel, IsDesignTimeCreatable=False}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="800">

    <UserControl.Resources>
        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MaterialDesignDataGridRow}">
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>


        <Style x:Key="ColumnHeader" TargetType="{x:Type DataGridColumnHeader}"
               BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}"
                                     d:DataContext="{d:DesignInstance Type=models:ImportColumnInfoModel, IsDesignTimeCreatable=False}">
                        <StackPanel Margin="0 15">
                            <ComboBox
                                Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}  ,FallbackValue=Hidden}"
                                ItemsSource="{ Binding Source={x:Static models:HeatingSystemColumnMappingValues.GetValues}}"
                                SelectedItem="{Binding ColumnType}"
                                materialDesign:HintAssist.Hint="select header">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock
                                            Text="{Binding Converter={StaticResource EnumConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}"
                                           BasedOn="{StaticResource MaterialDesignComboBox}">
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding ColumnType, Converter={StaticResource IsNullConverter}}"
                                                Value="False">
                                                <Setter Property="BorderBrush"
                                                        Value="{StaticResource PrimaryHueDarkBrush}" />
                                                <Setter Property="BorderThickness" Value="1" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <TextBlock
                                Padding="15"

                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                TextAlignment="Center" Text="{Binding ColumnName}">

                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}"
                                           BasedOn="{StaticResource MaterialDesignSubtitle1TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding ColumnType, Converter={StaticResource IsNullConverter}}"
                                                Value="False">
                                                <Setter Property="Background"
                                                        Value="{StaticResource PrimaryHueDarkBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>


                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- header -->
        <TextBlock Grid.Row="0" Margin="0 5" Text="Map your columns"
                   Style="{StaticResource MaterialDesignHeadline5TextBlock}" />


        <!-- brief description and mapping -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <StackPanel Grid.Column="0">

                    <ComboBox Margin="0 5"
                              materialDesign:HintAssist.Hint="select sheet"
                              ItemsSource="{Binding Sheets}"
                              SelectedItem="{Binding SelectedSheet}"
                              Style="{StaticResource MaterialDesignFilledComboBox}" HorizontalAlignment="Left">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                <CheckBox
                    x:Name="CheckBox"
                    Margin="0 5" Content="My sheet a header row"
                    IsChecked="{Binding IsSheetHeaderVisible}" />
                <StackPanel Orientation="Horizontal">
                    <components:PackIcon Kind="Information" Margin="0 0 5 0" Height="20" Width="20" />
                    <TextBlock Text="Select a header for each column you want to import" VerticalAlignment="Center" />
                </StackPanel>
            </StackPanel>


            <!-- mapping completion list -->
            <StackPanel Grid.Column="1" HorizontalAlignment="Right">
                <ListView ItemsSource="{Binding ColumnMappingInformation}">

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <components:PackIcon x:Name="MappedIcon" Margin="0 0 5 0" />
                                <TextBlock x:Name="MappedText"
                                           Text="{Binding Description}" />
                            </StackPanel>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding StatusModel}"
                                             Value="{x:Static models:MappingStatusModel.Ok}">
                                    <Setter TargetName="MappedText" Property="Foreground" Value="{StaticResource InformationColorBrush}" />
                                    <Setter TargetName="MappedIcon" Property="Foreground" Value="{StaticResource InformationColorBrush}" />
                                    <Setter TargetName="MappedIcon" Property="Kind" Value="CheckCircle" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusModel}"
                                             Value="{x:Static models:MappingStatusModel.MissingRow}">
                                    <Setter TargetName="MappedText" Property="Foreground" Value="{StaticResource WarningColorBrush}" />
                                    <Setter TargetName="MappedIcon" Property="Foreground" Value="{StaticResource WarningColorBrush}" />
                                    <Setter TargetName="MappedIcon" Property="Kind" Value="Alert" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusModel}"
                                             Value="{x:Static models:MappingStatusModel.NotAssigned}">
                                    <Setter TargetName="MappedText" Property="Foreground" Value="{StaticResource ErrorColorBrush}" />
                                    <Setter TargetName="MappedIcon" Property="Foreground" Value="{StaticResource ErrorColorBrush}" />
                                    <Setter TargetName="MappedIcon" Property="Kind" Value="Alert" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusModel}"
                                             Value="{x:Static models:MappingStatusModel.InconsistentData}">
                                    <Setter TargetName="MappedText" Property="Foreground" Value="{StaticResource ErrorColorBrush}" />
                                    <Setter TargetName="MappedIcon" Property="Foreground" Value="{StaticResource ErrorColorBrush}" />
                                    <Setter TargetName="MappedIcon" Property="Kind" Value="Alert" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>

            </StackPanel>

        </Grid>


        <!-- grid -->
        <components:DataGridExt Grid.Row="2"
                                ItemsSource="{Binding DisplayedSheet}"
                                ColumnSource="{Binding SheetColumnHeaders}"
                                IsReadOnly="True"
                                CanUserSortColumns="False"
                                Style="{StaticResource MaterialDesignDataGrid}"
                                ColumnHeaderStyle="{StaticResource ColumnHeader}">

        </components:DataGridExt>


    </Grid>
</UserControl>